
import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.event.MenuEvent;
import javax.swing.event.MenuListener;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author SAPTARSHI DE
 */
public class MainActivity extends javax.swing.JFrame implements MenuListener,ActionListener,KeyListener
{
    String h,v;
    JMenuBar menubar;
    JMenu Passenger,Flights,Booking;
    JMenuItem Acc_Details,Search_Pass,Passenger_List,LogOut;
    JMenuItem Add_Flights,Update_Flights,Search_Flights;
    JMenuItem Ticket_Booking,Cancel_Booking;
    /**
     * Creates new form MainActivity
     */
    public MainActivity(String s,String a) {
        h=s;
        v=a;
        setSize(1400,1400);
        setTitle("Airline Management System");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
	setLayout(new FlowLayout());
        menubar =new JMenuBar();
        
        //Adding Cutomer Item and its sub menus to the menu bar
        Passenger=new JMenu("Passenger");
        Passenger.addMenuListener(this);
        menubar.add(Passenger);
        
        if(v.equals("User")){
        Acc_Details=new JMenuItem("Account Details");
        Acc_Details.addActionListener(this);
        Passenger.add(Acc_Details);
        }
        
        if(v.equals("Admin")){
        Search_Pass=new JMenuItem("Update Passenger");
        Search_Pass.addActionListener(this);
        Passenger.add(Search_Pass);
        }
        
        if(v.equals("Admin")){
        Passenger_List=new JMenuItem("Search Passenger");
        Passenger_List.addActionListener(this);
        Passenger.add(Passenger_List);
        }
        
        LogOut=new JMenuItem("Log Out");
        LogOut.addActionListener(this);
        Passenger.add(LogOut);
       
         //Adding Flights Item and its sub menus to the menu bar
        Flights=new JMenu("Flights");
        Flights.addMenuListener(this);
        menubar.add(Flights);
        
         if(v.equals("Admin")){
        Add_Flights=new JMenuItem("New Flights");
        Add_Flights.addActionListener(this);
        Flights.add(Add_Flights);
         }
        
         if(v.equals("Admin")){
        Update_Flights=new JMenuItem("Update Flights");
        Update_Flights.addActionListener(this);
        Flights.add(Update_Flights);
         }
        
        Search_Flights=new JMenuItem("Search Flights");
        Search_Flights.addActionListener(this);
        Flights.add(Search_Flights);
        
        //Adding Flights Item and its sub menus to the menu bar
        Booking=new JMenu("Booking");
        Booking.addMenuListener(this);
        menubar.add(Booking);
        
        Ticket_Booking=new JMenuItem("Ticket Booking");
        Ticket_Booking.addActionListener(this);
        Booking.add(Ticket_Booking);

        Cancel_Booking=new JMenuItem("Cancel Booking");
        Cancel_Booking.addActionListener(this);
        Booking.add(Cancel_Booking);
        
        
        /*ImageIcon icon = new ImageIcon("images/delete.png"); 
        Image img = icon.getImage(); 
        BufferedImage bi = new BufferedImage(img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_INT_ARGB); 
        Graphics g = bi.createGraphics(); 
        g.drawImage(img, 5, 10, 20, 20, null); 
        ImageIcon newIcon = new ImageIcon(bi);*/
        
        
        
        this.setJMenuBar(menubar);
        
         ImagePanel panel = new ImagePanel((new ImageIcon("C:\\Users\\SAPTARSHI DE\\Desktop\\hello.jpg")).getImage());

    this.getContentPane().add(panel);
    this.pack();
    //frame.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public  void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainActivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainActivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainActivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainActivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
    }

    @Override
    public void menuSelected(MenuEvent e) {
       
    }

    @Override
    public void menuDeselected(MenuEvent e) {
       // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void menuCanceled(MenuEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if(e.getSource().equals(Acc_Details)){
        Customer_Details c=new Customer_Details(h);
        c.setVisible(true);
        }
        
        else if(e.getSource().equals(Search_Pass)){
        Search_Customer c=new Search_Customer();
        c.setVisible(true);
        }
        else if(e.getSource().equals(Add_Flights)){
        New_Flights c=new New_Flights();
        c.setVisible(true);
        }
        else if(e.getSource().equals(Update_Flights)){
        Modify_Flights c=new Modify_Flights();
        c.setVisible(true);
        }
        else if(e.getSource().equals(Search_Flights)){
        Search_Flights c=new Search_Flights();
        c.setVisible(true);
        }
        else if(e.getSource().equals(Ticket_Booking)){
        TicketBooking c=new TicketBooking(h);
        c.setVisible(true);
        }
        else if(e.getSource().equals(Cancel_Booking)){
        Cancel_Booking c=new Cancel_Booking();
        c.setVisible(true);
        }
        else if(e.getSource().equals(Passenger_List)){
        Passenger_List c=new Passenger_List();
        c.setVisible(true);
        }
        else if(e.getSource().equals(LogOut)){
        Login c=new Login();
        c.setVisible(true);
        MainActivity.this.setVisible(false);
        }
    }

    @Override
    public void keyTyped(KeyEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void keyPressed(KeyEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void keyReleased(KeyEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
